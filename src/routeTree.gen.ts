/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SocialProfileRouteImport } from './routes/social-profile'
import { Route as RecipeRouteImport } from './routes/recipe'
import { Route as ProductPreviewCardRouteImport } from './routes/product-preview-card'
import { Route as BlogPreviewCardRouteImport } from './routes/blog-preview-card'
import { Route as IndexRouteImport } from './routes/index'

const SocialProfileRoute = SocialProfileRouteImport.update({
  id: '/social-profile',
  path: '/social-profile',
  getParentRoute: () => rootRouteImport,
} as any)
const RecipeRoute = RecipeRouteImport.update({
  id: '/recipe',
  path: '/recipe',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductPreviewCardRoute = ProductPreviewCardRouteImport.update({
  id: '/product-preview-card',
  path: '/product-preview-card',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPreviewCardRoute = BlogPreviewCardRouteImport.update({
  id: '/blog-preview-card',
  path: '/blog-preview-card',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog-preview-card': typeof BlogPreviewCardRoute
  '/product-preview-card': typeof ProductPreviewCardRoute
  '/recipe': typeof RecipeRoute
  '/social-profile': typeof SocialProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog-preview-card': typeof BlogPreviewCardRoute
  '/product-preview-card': typeof ProductPreviewCardRoute
  '/recipe': typeof RecipeRoute
  '/social-profile': typeof SocialProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog-preview-card': typeof BlogPreviewCardRoute
  '/product-preview-card': typeof ProductPreviewCardRoute
  '/recipe': typeof RecipeRoute
  '/social-profile': typeof SocialProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog-preview-card'
    | '/product-preview-card'
    | '/recipe'
    | '/social-profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog-preview-card'
    | '/product-preview-card'
    | '/recipe'
    | '/social-profile'
  id:
    | '__root__'
    | '/'
    | '/blog-preview-card'
    | '/product-preview-card'
    | '/recipe'
    | '/social-profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogPreviewCardRoute: typeof BlogPreviewCardRoute
  ProductPreviewCardRoute: typeof ProductPreviewCardRoute
  RecipeRoute: typeof RecipeRoute
  SocialProfileRoute: typeof SocialProfileRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/social-profile': {
      id: '/social-profile'
      path: '/social-profile'
      fullPath: '/social-profile'
      preLoaderRoute: typeof SocialProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recipe': {
      id: '/recipe'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof RecipeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product-preview-card': {
      id: '/product-preview-card'
      path: '/product-preview-card'
      fullPath: '/product-preview-card'
      preLoaderRoute: typeof ProductPreviewCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog-preview-card': {
      id: '/blog-preview-card'
      path: '/blog-preview-card'
      fullPath: '/blog-preview-card'
      preLoaderRoute: typeof BlogPreviewCardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogPreviewCardRoute: BlogPreviewCardRoute,
  ProductPreviewCardRoute: ProductPreviewCardRoute,
  RecipeRoute: RecipeRoute,
  SocialProfileRoute: SocialProfileRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
